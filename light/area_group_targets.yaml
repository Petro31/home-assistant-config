#
# Label Areas's with special name as a group area.  This script will auto generate the template
# light entities that are in target_light areas.
#

# The follow code is meant to be copied & paste into the template editor.
# Paste the results below the code chunk

# COPY & Uncomment, paste into template editor.
# ---------------------------------------------

# {% set label = 'target_light' %}
# {% set groups = ['Master Suite', 'Bonus Room'] | sort %}

# {% set fmat = """
#     #################################
#     ### {1:^25} ###
#     #################################

#     area_{0}:
#       unique_id: area_{0}
#       friendly_name: {1}
#       value_template: >
#         {{{{ {2}
#           | map('area_entities') | sum(start=[])
#           | select('in', label_entities('{3}')) 
#           | select('is_state','on') 
#           | list | count > 0 }}}}
#       level_template: >
#         {{%- set entities = {2}
#           | map('area_entities') | sum(start=[])
#           | select('in', label_entities('{3}')) 
#           | select('is_state','on') | list %}}
#         {{%- set levels = entities | map('state_attr', 'brightness') | reject('none') | list %}}
#         {{{{- levels | average | int if levels else 255 if entities | length > 0 else 0 }}}}
#       availability_template: >
#         {{{{ {2}
#           | map('area_entities') | sum(start=[])
#           | select('in', label_entities('{3}')) 
#           | map('has_value')
#           | select('eq', False)
#           | list | count == 0 }}}}
#       turn_on:
#       - service: script.light_handler
#         data:
#           <<: &{0}_args
#             area: {2}
#             include: {3}
#           level: 255
#       turn_off:
#       - service: script.light_handler
#         data:
#           <<: *{0}_args
#           level: 0
#       set_level:
#       - service: script.light_handler
#         data:
#           <<: *{0}_args
#           level: >
#             {{{{- brightness }}}}""" %}

# - platform: template
#   lights:
# {%- for group in groups %}
# {{ fmat.format(group | slugify, group, label_areas(label_id(group)), label) }}
# {%- endfor %}

# ---------------------------------------------
# END COPY
# ---------------------------------------------
# PASTE RESULTS BELOW THIS HEADER

- platform: template
  lights:

    #################################
    ###        Bonus Room         ###
    #################################

    area_bonus_room:
      unique_id: area_bonus_room
      friendly_name: Bonus Room
      value_template: >
        {{ ['bonus_room', 'office', 'bonus_room_server_closet']
          | map('area_entities') | sum(start=[])
          | select('in', label_entities('target_light')) 
          | select('is_state','on') 
          | list | count > 0 }}
      level_template: >
        {%- set entities = ['bonus_room', 'office', 'bonus_room_server_closet']
          | map('area_entities') | sum(start=[])
          | select('in', label_entities('target_light')) 
          | select('is_state','on') | list %}
        {%- set levels = entities | map('state_attr', 'brightness') | reject('none') | list %}
        {{- levels | average | int if levels else 255 if entities | length > 0 else 0 }}
      availability_template: >
        {{ ['bonus_room', 'office', 'bonus_room_server_closet']
          | map('area_entities') | sum(start=[])
          | select('in', label_entities('target_light')) 
          | map('has_value')
          | select('eq', False)
          | list | count == 0 }}
      turn_on:
      - service: script.light_handler
        data:
          <<: &bonus_room_args
            area: ['bonus_room', 'office', 'bonus_room_server_closet']
            include: target_light
          level: 255
      turn_off:
      - service: script.light_handler
        data:
          <<: *bonus_room_args
          level: 0
      set_level:
      - service: script.light_handler
        data:
          <<: *bonus_room_args
          level: >
            {{- brightness }}

    #################################
    ###       Master Suite        ###
    #################################

    area_master_suite:
      unique_id: area_master_suite
      friendly_name: Master Suite
      value_template: >
        {{ ['master_bathroom', 'master_bedroom', 'master_closet']
          | map('area_entities') | sum(start=[])
          | select('in', label_entities('target_light')) 
          | select('is_state','on') 
          | list | count > 0 }}
      level_template: >
        {%- set entities = ['master_bathroom', 'master_bedroom', 'master_closet']
          | map('area_entities') | sum(start=[])
          | select('in', label_entities('target_light')) 
          | select('is_state','on') | list %}
        {%- set levels = entities | map('state_attr', 'brightness') | reject('none') | list %}
        {{- levels | average | int if levels else 255 if entities | length > 0 else 0 }}
      availability_template: >
        {{ ['master_bathroom', 'master_bedroom', 'master_closet']
          | map('area_entities') | sum(start=[])
          | select('in', label_entities('target_light')) 
          | map('has_value')
          | select('eq', False)
          | list | count == 0 }}
      turn_on:
      - service: script.light_handler
        data:
          <<: &master_suite_args
            area: ['master_bathroom', 'master_bedroom', 'master_closet']
            include: target_light
          level: 255
      turn_off:
      - service: script.light_handler
        data:
          <<: *master_suite_args
          level: 0
      set_level:
      - service: script.light_handler
        data:
          <<: *master_suite_args
          level: >
            {{- brightness }}