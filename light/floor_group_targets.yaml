#
# This script will auto generate the template
# light entities that are in target_light areas.
#

# The follow code is meant to be copied & paste into the template editor.
# Paste the results below the code chunk

# COPY & Uncomment, paste into template editor.
# ---------------------------------------------

# {% set label = 'target_light' %}
# {% set groups = {
#   'all': ['attached', 'basement', 'downstairs', 'upstairs', 'garage'],
#   'inside': ['basement', 'downstairs', 'upstairs', 'garage'],
#   'outside': ['attached'],
# } %}
# {% set fmat = """
#     #################################
#     ### {1:^25} ###
#     #################################

#     floor_{0}:
#       unique_id: floor_{0}
#       friendly_name: {1}
#       value_template: >
#         {{{{ {2}
#           | map('floor_areas') | sum(start=[])
#           | map('area_entities') | sum(start=[])
#           | select('in', label_entities('{3}')) 
#           | select('is_state','on') 
#           | list | count > 0 }}}}
#       level_template: >
#         {{%- set entities = {2}
#           | map('floor_areas') | sum(start=[])
#           | map('area_entities') | sum(start=[])
#           | select('in', label_entities('{3}')) 
#           | select('is_state','on') | list %}}
#         {{%- set levels = entities | map('state_attr', 'brightness') | reject('none') | list %}}
#         {{{{- levels | average | int if levels else 255 if entities | length > 0 else 0 }}}}
#       availability_template: >
#         {{{{ {2}
#           | map('floor_areas') | sum(start=[])
#           | map('area_entities') | sum(start=[])
#           | select('in', label_entities('{3}')) 
#           | map('has_value')
#           | select('eq', False)
#           | list | count == 0 }}}}
#       turn_on:
#       - service: script.light_handler
#         data:
#           <<: &{0}_args
#             floor: {2}
#             include: {3}
#           level: 255
#       turn_off:
#       - service: script.light_handler
#         data:
#           <<: *{0}_args
#           level: 0
#       set_level:
#       - service: script.light_handler
#         data:
#           <<: *{0}_args
#           level: >
#             {{{{- brightness }}}}""" %}

# - platform: template
#   lights:
# {%- for name, group in groups.items() %}
# {{ fmat.format(name, name.title(), group, label) }}
# {%- endfor %}

# ---------------------------------------------
# END COPY
# ---------------------------------------------
# PASTE RESULTS BELOW THIS HEADER

- platform: template
  lights:

    #################################
    ###            All            ###
    #################################

    floor_all:
      unique_id: floor_all
      friendly_name: All
      value_template: >
        {{ ['attached', 'basement', 'downstairs', 'upstairs', 'garage']
          | map('floor_areas') | sum(start=[])
          | map('area_entities') | sum(start=[])
          | select('in', label_entities('target_light')) 
          | select('is_state','on') 
          | list | count > 0 }}
      level_template: >
        {%- set entities = ['attached', 'basement', 'downstairs', 'upstairs', 'garage']
          | map('floor_areas') | sum(start=[])
          | map('area_entities') | sum(start=[])
          | select('in', label_entities('target_light')) 
          | select('is_state','on') | list %}
        {%- set levels = entities | map('state_attr', 'brightness') | reject('none') | list %}
        {{- levels | average | int if levels else 255 if entities | length > 0 else 0 }}
      availability_template: >
        {{ ['attached', 'basement', 'downstairs', 'upstairs', 'garage']
          | map('floor_areas') | sum(start=[])
          | map('area_entities') | sum(start=[])
          | select('in', label_entities('target_light')) 
          | map('has_value')
          | select('eq', False)
          | list | count == 0 }}
      turn_on:
      - service: script.light_handler
        data:
          <<: &all_args
            floor: ['attached', 'basement', 'downstairs', 'upstairs', 'garage']
            include: target_light
          level: 255
      turn_off:
      - service: script.light_handler
        data:
          <<: *all_args
          level: 0
      set_level:
      - service: script.light_handler
        data:
          <<: *all_args
          level: >
            {{- brightness }}

    #################################
    ###          Inside           ###
    #################################

    floor_inside:
      unique_id: floor_inside
      friendly_name: Inside
      value_template: >
        {{ ['basement', 'downstairs', 'upstairs', 'garage']
          | map('floor_areas') | sum(start=[])
          | map('area_entities') | sum(start=[])
          | select('in', label_entities('target_light')) 
          | select('is_state','on') 
          | list | count > 0 }}
      level_template: >
        {%- set entities = ['basement', 'downstairs', 'upstairs', 'garage']
          | map('floor_areas') | sum(start=[])
          | map('area_entities') | sum(start=[])
          | select('in', label_entities('target_light')) 
          | select('is_state','on') | list %}
        {%- set levels = entities | map('state_attr', 'brightness') | reject('none') | list %}
        {{- levels | average | int if levels else 255 if entities | length > 0 else 0 }}
      availability_template: >
        {{ ['basement', 'downstairs', 'upstairs', 'garage']
          | map('floor_areas') | sum(start=[])
          | map('area_entities') | sum(start=[])
          | select('in', label_entities('target_light')) 
          | map('has_value')
          | select('eq', False)
          | list | count == 0 }}
      turn_on:
      - service: script.light_handler
        data:
          <<: &inside_args
            floor: ['basement', 'downstairs', 'upstairs', 'garage']
            include: target_light
          level: 255
      turn_off:
      - service: script.light_handler
        data:
          <<: *inside_args
          level: 0
      set_level:
      - service: script.light_handler
        data:
          <<: *inside_args
          level: >
            {{- brightness }}

    #################################
    ###          Outside          ###
    #################################

    floor_outside:
      unique_id: floor_outside
      friendly_name: Outside
      value_template: >
        {{ ['attached']
          | map('floor_areas') | sum(start=[])
          | map('area_entities') | sum(start=[])
          | select('in', label_entities('target_light')) 
          | select('is_state','on') 
          | list | count > 0 }}
      level_template: >
        {%- set entities = ['attached']
          | map('floor_areas') | sum(start=[])
          | map('area_entities') | sum(start=[])
          | select('in', label_entities('target_light')) 
          | select('is_state','on') | list %}
        {%- set levels = entities | map('state_attr', 'brightness') | reject('none') | list %}
        {{- levels | average | int if levels else 255 if entities | length > 0 else 0 }}
      availability_template: >
        {{ ['attached']
          | map('floor_areas') | sum(start=[])
          | map('area_entities') | sum(start=[])
          | select('in', label_entities('target_light')) 
          | map('has_value')
          | select('eq', False)
          | list | count == 0 }}
      turn_on:
      - service: script.light_handler
        data:
          <<: &outside_args
            floor: ['attached']
            include: target_light
          level: 255
      turn_off:
      - service: script.light_handler
        data:
          <<: *outside_args
          level: 0
      set_level:
      - service: script.light_handler
        data:
          <<: *outside_args
          level: >
            {{- brightness }}