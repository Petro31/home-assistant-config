- binary_sensor:
  - unique_id: christmas_season
    name: Christmas Season
    state: >
      {{ is_state('sensor.seasonal_lights', 'scene.holiday_bulbs_christmas') }}
    attributes:
      template: seasons

  - unique_id: indoor_christmas
    name: Indoor Christmas
    device_class: light
    state: >
      {% set t = now() %}
      {% set s = today_at(states('input_datetime.indoor_christmas_lights_start')) %}
      {% set e = today_at(states('input_datetime.indoor_christmas_lights_end')) %}
      {{ s <= t <= e and is_state('binary_sensor.christmas_season', 'on') }}

- sensor:
  - unique_id: seasonal_lights
    name: Seasonal Lights
    state: >
      {%- macro mwd(month, week, day) -%}
      {%- set today = today_at() %}
      {%- set temp = today.replace(month=month, day=1) %}
      {%- set adjust = (day - temp.weekday()) % 7 %}
      {%- set temp = temp + timedelta(days=adjust) -%}
      {{ (temp + timedelta(weeks = week - 1)).isoformat() }}
      {%- endmacro %}
      
      {%- macro md(month, day) -%}
      {{ today_at().replace(month=month, day=day).isoformat() }}
      {%- endmacro %}
      
      {%- macro lastdayinmonth(month, day) -%}
      {%- set today = today_at() %}
      {%- set temp = today.replace(month=month, day=1) + timedelta(days=31) %}
      {%- set temp = temp.replace(day=1) - timedelta(days=7) %}
      {%- set adjust = (day - temp.weekday()) % 7 %}
      {%- set temp = temp + timedelta(days=adjust) -%}
      {{ (temp).isoformat() }}
      {%- endmacro %}

      {%- macro easter() %}
      {%- set year = now().year %}
      {%- set special_years = ['1954', '1981', '2049', '2076'] %}
      {%- set special_year_sub = 7 %}
      {%- set a = year % 19 %}
      {%- set b = year % 4 %}
      {%- set c = year % 7 %}
      {%- set d = (19 * a + 24) % 30 %}
      {%- set e = ((2 * b) + (4 * c) + (6 * d) + 5) % 7 %}
      {%- set day = (22 + d + e) - special_year_sub if year in special_years else 22 + d + e %}
      {%- set month = 4 if day > 31 else 3 %}
      {%- set day = day - 31 if day > 31 else day -%}
      {{ today_at().replace(month=month, day=day).isoformat() }}
      {%- endmacro %}

      {%- set easter_day = easter() | as_datetime %}
      {%- set thanksgiving = mwd(11, 4, 3) | as_datetime %}
      {%- set valentines = md(2,14) | as_datetime %}
      {%- set veterans = md(11,11) | as_datetime %}
      {%- set july4 = md(7,4) | as_datetime %}
      {%- set stpaddy = md(3,17) | as_datetime %}
      {%- set memorial_day = lastdayinmonth(5,0) | as_datetime %}

      {%- set scenes = dict(
        christmas="scene.holiday_bulbs_christmas",
        day="scene.holiday_bulbs_daylight",
        easter="scene.holiday_bulbs_easter",
        halloween="scene.holiday_bulbs_halloween",
        patriotic="scene.holiday_bulbs_patriotic",
        soft="scene.holiday_bulbs_soft_white",
        stpaddy="scene.holiday_bulbs_st_patricks_day",
        thanksgiving="scene.holiday_bulbs_thanksgiving",
        valentines="scene.holiday_bulbs_valentines_day",
        memorial_day="scene.holiday_bulbs_patriotic",
      ) %}

      {%- set events = [
        ('easter', easter_day - timedelta(days=6)),
        ('soft', easter_day + timedelta(days=1)),
        ('christmas', thanksgiving - timedelta(days=4)),
        ('soft', md(1,7) | as_datetime ),
        ('halloween', md(10,8) | as_datetime ),
        ('soft', md(11,1) | as_datetime ),
        ('patriotic', veterans - timedelta(days=1) ),
        ('soft', veterans + timedelta(days=1) ),
        ('patriotic', july4 - timedelta(days=6) ),
        ('soft', july4 + timedelta(days=1) ),
        ('stpaddy', stpaddy - timedelta(days=6) ),
        ('soft', stpaddy + timedelta(days=1) ),
        ('valentines', valentines - timedelta(days=6) ),
        ('soft', valentines + timedelta(days=1) ),
        ('memorial_day', memorial_day - timedelta(days=1)),
        ('soft', memorial_day + timedelta(days=1) ),
      ] %}

      {%- set ns = namespace(event='unknown') %}
      {% for name, dt in events | sort(attribute='1') %}
        {%- if dt.date() | string <= now().date() | string %}
           {% set ns.event = scenes.get(name, 'soft') %}
        {%- endif %}
      {% endfor %}
      {{ ns.event }}