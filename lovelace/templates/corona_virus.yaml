# lovelace_gen

type: custom:button-card
show_state: false
show_label: true
show_icon: false
show_name: true
show_entity_picture: true
entity_picture: {{ image|default('/local/images/usa.png')}}
label: |
  [[[
    var empty = '&nbsp;'
    if (entity === undefined)
      return empty;

    function getEntityIcon(text, icon, color){
      return `<ha-icon
        icon="${icon}"
        style="width: 7.5%; color: ${color};">
        </ha-icon><span> ${text}</span>`
    }

    var attrs = [{
      text: entity.attributes.confirmed,
      icon: 'mdi:emoticon-neutral-outline',
      color: 'var(--paper-item-icon-active-color)'
    }, {
      text: entity.attributes.recovered,
      icon: 'mdi:emoticon-excited-outline',
      color: 'rgba(94, 228, 101)'
    }, {
      text: entity.attributes.deaths,
      icon: 'mdi:emoticon-dead-outline',
      color: 'rgba(228, 94, 101)'
    }]

    var i;
    var line1 = []
    for (i = 0; i < attrs.length; i++){
      var attr = attrs[i];
      line1.push(getEntityIcon(attr.text, attr.icon, attr.color));
    }
    return line1.join(" ");
  ]]]
aspect_ratio: 7/1
entity: {{ entity }}
icon: mdi:biohazard
color: rgb(94, 228, 101)
size: 60%
styles:
  card:
  - --ha-card-background: "rgba(0, 0, 0, 0.0)"
  - --ha-card-box-shadow: 'none'
  - padding: 0
  grid:
  - grid-template-areas: '"i n" "i l"'
  - grid-template-columns: 3fr 14fr
  - grid-template-rows: 1fr 1fr
  name:
  - justify-self: start
  - align-self: end
  - padding-left: 10px
  - font-weight: bold
  - font-family: Helvetica 
  - font-size: 16px
  label:
  - align-self: start
  - padding-left: 10px
  - font-size: 12px
  - justify-self: start
  - color: gray
  - text-align: start
  custom_fields:
    updated:
    - position: absolute
    - top: 50%
    - right: 5%
    - transform: translateY(-50%)
    - font-size: 13px
    - justify-self: start
    - text-align: start
custom_fields:
  updated: |
    [[[
      if (entity === undefined)
        return 'Invalid Entity';
  
      let now = new Date();
      let date = new Date(entity.state);
  
      var tdelta = Math.floor((now - date)/1000);
  
      function plural(descriptor, divisor){
        var ret = Math.floor(tdelta/divisor);
        return (ret == 1) ? `${ret} ${descriptor} ago` : `${ret} ${descriptor}s ago`;
      }
  
      var tstring;
      if (tdelta < 60)
        tstring = plural('second', 1);
      else if (tdelta < 60 * 60)
        tstring = plural('minute', 60);
      else if (tdelta < 60 * 60 * 24)
        tstring = plural('hour', 60 * 60);
      else
        tstring = plural('day', 60 * 60 * 24);
      return tstring;
    ]]]
tap_action:
  action: url
  url_path: "https://www.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6"
