indoor_ambiance:
  alias: Indoor Ambiance
  mode: parallel
  variables:
    pass: foo
  sequence:
  - service: homeassistant.turn_on
    target:
      entity_id: light.living_room


indoor_holiday_colors:
  alias: Indoor Holiday Colors
  mode: single
  fields:
    targets:
      description: Light entities
      required: True
      selector:
        entity:
          multiple: True
          filter:
            domain: light
    holiday:
      description: Override the input holiday for testing purposes
      example: valentines
      required: False
      selector:
        select:
          options:
          - label: No Holiday
            value: no_holiday
          - label: Patriotic
            value: patriotic
          - label: Valentines Day
            value: valentines
          - label: St Patricks Day
            value: st_patricks_day
          - label: Easter
            value: easter
          - label: Memorial Day
            value: memorial_day
          - label: 4th of July
            value: independence_day
          - label: Halloween
            value: halloween
          - label: Veterans Day
            value: veterans_day
          - label: Christmas
            value: christmas
          - label: Thanksgiving
            value: thanksgiving
  variables:
    config: >
      {% from 'holiday.jinja' import color_configuration %}
      {{ color_configuration }}
    found: >
      {{ holiday if holiday is defined else states('sensor.holiday_lighting') }}
    colors: >
      {{ config.get(found, config.no_holiday) }}
    color: >
      {% set name, value = colors.items() | list | random %}
      {{ {'name': name, 'value': value} }}
  sequence:
  - service: light.turn_on
    target:
      entity_id: "{{ targets }}"
    data:
      rgb_color: "{{ color.value[:3] }}"
