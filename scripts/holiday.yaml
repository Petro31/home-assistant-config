christmas_lights_on:
  alias: Holiday - Christmas Lights - On
  mode: single
  variables:
    config:
      cabinet:
        entity_id: select.cabinet_wled_preset
        options: >
          {% set reject_state = 'Off' if is_state('select.cabinet_wled_preset', 'Match') else 'On' %}
          {{ state_attr('select.cabinet_wled_preset', 'options') | select('search', 'Christmas') | reject('search', reject_state) | list }}
      tree:
        entity_id: select.front_tree_preset
        options: >
          {{ state_attr('select.front_tree_preset', 'options') | reject('in', ['Match','Off','On']) | list }}
      hutch: 
        entity_id: select.hutch_playlist
        options: >
          {{ state_attr('select.hutch_playlist', 'options') }}
    select_data: >
      {% set ns = namespace(ret=[]) %}
      {% for name, value in config.items() %}
        {% set ns.ret = ns.ret + [(name, {'entity_id': value.entity_id, 'option': value.options | random})] %}
      {% endfor %}
      {{ dict.from_keys(ns.ret) }}
    entities: &entities
    - switch.living_room_window
    - switch.uplight_christmas
    service: switch.turn_on
  sequence: &sequence
  - parallel:
    - service: "{{ service }}"
      target:
        entity_id: "{{ entities }}"
    - service: select.select_option
      data: "{{ select_data.cabinet }}"
    - service: select.select_option
      data: "{{ select_data.tree }}"
    - service: select.select_option
      data: "{{ select_data.hutch }}"

christmas_lights_off:
  alias: Holiday - Christmas Lights - Off
  mode: single
  variables: 
    select_data: 
      cabinet:
        entity_id: select.cabinet_wled_preset
        option: >
          {{ 'Match' if is_state('select.cabinet_wled_preset', 'Christmas On') else 'Off' }}
      tree:
        entity_id: select.front_tree_preset
        option: 'Off'
      hutch: 
        entity_id: select.hutch_preset
        option: 'Off'
    entities: *entities
    service: switch.turn_off
  sequence: *sequence
