# THIS IS DANGEROUS, USE AT YOUR OWN RISK
# CAUSES WLED TO CRASH WITH 13.3 (build 2208222) IF YOU 
# CALL IT TOO QUICKLY.  I DON'T THINK WLED HANDLES
# ASYNC WELL.  OR THE HA INTEGRATION DOESN'T HANDLE THE ASYNC
# CALLS WELL.  OR THE REPO THAT HA USES TO INTERFACE WITH WLED
# DOESN"T HANDLE ASYNC WELL.

wled_master_segments:
  alias: Wled - Master/Segments
  mode: parallel
  fields:
    master:
      description: (Required) The wled light.
      example: light.wled
      required: true
      selector:
        entity:
          domain: light
          integration: wled
    segments:
      description: (Required) The wled light.
      example: light.wled
      required: true
      selector:
        entity:
          multiple: true
          domain: light
          integration: wled
    to_state: 
      description: The desired state
      example: 'on'
      required: True
      selector:
        state:
          entity_id: light.deck_wled_1
  variables:
    common: "{{ master.split('_')[:-1] | join('_') }}"
    to_on:
      brightness: 217
      rgbw_color: [ 255, 199, 125, 0 ]
      transition: 0
    to_off:
      transition: 0
    service: light.turn_{{ to_state }}
    service_data: "{{ to_on if to_state == 'on' else to_off }}"
    opposite_state: "{{ 'off' if to_state == 'on' else 'on' }}"
    paired_segments: >
      {% set master_device = device_id('light.cabinet_wled_master') %}
      {{ segments | select('in', device_entities(master_device)) | list }}
  sequence:
  - condition: template
    value_template: "{{ to_state in ['on', 'off'] and paired_segments | length > 0 }}"

  - service: "{{ service }}"
    target:
      entity_id: "{{ paired_segments }}"
    data: "{{ service_data }}"

  - choose:
    - conditions:
      - condition: template
        value_template: "{{ is_state(master, opposite_state) }}"
      sequence:
      - service: "{{ service }}"
        target:
          entity_id: "{{ master }}"
