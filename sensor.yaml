
  # TEMPLATE SENSORS

  - platform: template
    sensors:
      outside_temperature: # CREATED FOR TREND TESTING AND POSSIBLE USE
        unique_id: outside_temperature
        friendly_name: Outside Temperature
        value_template: > 
          {{ state_attr('weather.dark_sky', 'temperature') }}
        unit_of_measurement: '째F'
        
      ups_uptime:
        unique_id: ups_uptime
        friendly_name: UPS Uptime
        device_class: timestamp
        value_template: >
          {%- set dt = strptime(states('sensor.ups_startup_time'), '%Y-%m-%d %H:%M:%S %z') %}
          {{ dt.timestamp() | timestamp_custom('%Y-%m-%dT%H:%M:%S.%f+00:00', False) }}
        
      disk_use_total:
        unique_id: disk_use_total
        friendly_name: Disk Use Total
        value_template: >
          {{ (states('sensor.disk_free_home') | float + states('sensor.disk_use_home') | float) | round(1) }}
        unit_of_measurement: "GiB"
        
      memory_use_total:
        unique_id: memory_use_total
        friendly_name: Memory Use Total
        value_template: >
          {{ (states('sensor.memory_free') | float + states('sensor.memory_use') | float) | round(1) }}
        unit_of_measurement: "MiB"
          
  # SYSTREM MONITOR
    
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /home
      - type: disk_use
        arg: /home
      - type: disk_free
        arg: /home
      - type: memory_use
      - type: memory_free
      - type: memory_use_percent
      - type: processor_use
      - type: last_boot
      
  # APC
  
  - platform: apcupsd
    resources:
      - bcharge
      - model
      - linev
      - loadpct
      - timeleft
      - starttime
      
  - platform: time_date
    display_options:
      - time
      - date_time
      - date
      
  - platform: version

  # DST Calcs

  - platform: template
    sensors:
      dst:
        unique_id: dst
        friendly_name: Daylight Savings Times
        device_class: timestamp
        value_template: >
          {%- set ns = namespace(previous = 2, spring=none, fall=none) %}
          {%- set today = strptime(states('sensor.date'), '%Y-%m-%d').astimezone().replace(hour=ns.previous) %}
          {%- for i in range(365) %}
          {%- set day = (today + timedelta(days=i)).astimezone() %}
          {%- if ns.previous - day.hour == -1 %}
          {%- set ns.spring = today + timedelta(days=i) | timestamp_local %}
          {%- elif ns.previous - day.hour == 1 %}
          {%- set ns.fall = today + timedelta(days=i) | timestamp_local %}
          {%- endif %}
          {%- set ns.previous = day.hour %}
          {%- endfor %}
          {{ [ns.spring, ns.fall] | min }}
        attribute_templates:
          next: >
            {%- set ns = namespace(previous = 2, spring=none, fall=none) %}
            {%- set today = strptime(states('sensor.date'), '%Y-%m-%d').astimezone().replace(hour=ns.previous) %}
            {%- for i in range(365) %}
            {%- set day = (today + timedelta(days=i)).astimezone() %}
            {%- if ns.previous - day.hour == -1 %}
            {%- set ns.spring = today + timedelta(days=i) %}
            {%- elif ns.previous - day.hour == 1 %}
            {%- set ns.fall = today + timedelta(days=i) %}
            {%- endif %}
            {%- set ns.previous = day.hour %}
            {%- endfor %}
            {%- set next = [ns.spring, ns.fall] | min %}
            {%- set phrase = 'lose an hour' if next == ns.spring else 'gain an hour' %}
            {"spring": "{{ns.spring}}", "fall": "{{ns.fall}}", "event": "{{next}}", "days_to_event":{{(next-today).days}}, "phrase": "{{phrase}}"}

  # CLI
  
  - platform: command_line
    name: CPU Temperature
    command: "cat /sys/class/thermal/thermal_zone3/temp"
    unit_of_measurement: "째C"
    value_template: '{{ value | multiply(0.001) | round(1) }}'
  
  # SNMP
  
  - platform: snmp
    host: !secret unifi_bonus_switch
    name: Bonus Room Switch Temperature
    unit_of_measurement: "째C"
    baseoid: 1.3.6.1.4.1.4413.1.1.43.1.8.1.5.1.0

  - platform: snmp
    host: !secret unifi_bonus_switch
    name: Bonus Room Switch Uptime
    baseoid: 1.3.6.1.2.1.1.3.0
    value_template: >
      {{ (now().timestamp() - (value | int / 100)) | timestamp_custom('%Y-%m-%dT%H:%M:%S.%f+00:00', False) }}
      
  - platform: snmp
    host: !secret unifi_server_switch
    name: Server Room Switch Temperature
    unit_of_measurement: "째C"
    baseoid: 1.3.6.1.4.1.4413.1.1.43.1.8.1.5.1.0
      
  - platform: snmp
    host: !secret unifi_server_switch
    name: Server Room Switch Uptime
    baseoid: 1.3.6.1.2.1.1.3.0
    value_template: >
      {{ (now().timestamp() - (value | int / 100)) | timestamp_custom('%Y-%m-%dT%H:%M:%S.%f+00:00', False) }}
      
  - platform: snmp
    host: !secret unifi_server_gateway
    name: Server Room Gateway Uptime
    baseoid: 1.3.6.1.2.1.1.3.0
    value_template: >
      {{ (now().timestamp() - (value | int / 100)) | timestamp_custom('%Y-%m-%dT%H:%M:%S.%f+00:00', False) }}
      
  - platform: snmp
    host: !secret unifi_garage_ac_lite
    name: Garage AC Lite Uptime
    baseoid: 1.3.6.1.2.1.1.3.0
    value_template: >
      {{ (now().timestamp() - (value | int / 100)) | timestamp_custom('%Y-%m-%dT%H:%M:%S.%f+00:00', False) }}
     
  - platform: snmp
    host: !secret unifi_closet_ac_lite
    name: Hall Closet AC Lite Uptime
    baseoid: 1.3.6.1.2.1.1.3.0
    value_template: >
      {{ (now().timestamp() - (value | int / 100)) | timestamp_custom('%Y-%m-%dT%H:%M:%S.%f+00:00', False) }}
     
  - platform: snmp
    host: !secret unifi_server_ac_lite
    name: Server Room AC Lite Uptime
    baseoid: 1.3.6.1.2.1.1.3.0
    value_template: >
      {{ (now().timestamp() - (value | int / 100)) | timestamp_custom('%Y-%m-%dT%H:%M:%S.%f+00:00', False) }}
     

  - platform: snmp
    host: !secret synology_host
    name: Synology Uptime
    baseoid: 1.3.6.1.2.1.25.1.1.0
    value_template: >
      {{ (now().timestamp() - (value | int / 100)) | timestamp_custom('%Y-%m-%dT%H:%M:%S.%f+00:00', False) }}

  - platform: sun2
    monitored_conditions:
      - dawn
      - daylight
      - dusk
      - night
      - solar_noon
      - sunrise
      - sunset

  # CORONAVIRUS SENSORS

  - platform: rest
    resource: "https://services1.arcgis.com/0MSEUqKaxRlEPj5g/arcgis/rest/services/ncov_cases/FeatureServer/1/query?f=json&where=(Confirmed%20%3E%200)%20AND%20(Country_Region%3D%27US%27)&returnGeometry=false&spatialRel=esriSpatialRelIntersects&outFields=*&orderByFields=Confirmed%20desc%2CCountry_Region%20asc%2CProvince_State%20asc&outSR=102100&resultOffset=0&resultRecordCount=250&cacheHint=true"
    name: Corona Virus Rest
    value_template: >
      {%- set last_updated = value_json.features | map(attribute='attributes.Last_Update') | list | max / 1000 %}
      {{ last_updated | timestamp_custom('%Y-%m-%dT%H:%M:%S.%f+00:00', False) }}
    json_attributes:
      - features
  
  - platform: rest
    resource: !secret corona_virus_county_url
    name: Corona Virus County Rest
    value_template: >
      {%- set last_updated = value_json.features | map(attribute='attributes.Last_Update') | list | max / 1000 %}
      {{ last_updated | timestamp_custom('%Y-%m-%dT%H:%M:%S.%f+00:00', False) }}
    json_attributes:
      - features

  - platform: uptime

  - platform: template
    sensors:
      corona_virus_usa:
        unique_id: corona_virus_usa
        friendly_name: Corona Virus USA
        entity_id: sensor.corona_virus_rest
        availability_template: >
          {%- set features = state_attr('sensor.corona_virus_rest', 'features') %}
          {%- set features = features | map(attribute='attributes') | list %}
          {{ features | length > 0 }}
        value_template: >
          {%- set features = state_attr('sensor.corona_virus_rest', 'features') %}
          {%- set last_updated = features | map(attribute='attributes.Last_Update') | list | max / 1000 %}
          {{ last_updated | timestamp_custom('%Y-%m-%dT%H:%M:%S.%f+00:00', False) }}
        attribute_templates:
          confirmed: >
            {%- set features = state_attr('sensor.corona_virus_rest', 'features') %}
            {{ features | map(attribute='attributes.Confirmed') | list | sum }}
          deaths: >
            {%- set features = state_attr('sensor.corona_virus_rest', 'features') %}
            {{ features | map(attribute='attributes.Deaths') | list | sum }}
          recovered: >
            {%- set features = state_attr('sensor.corona_virus_rest', 'features') %}
            {{ features | map(attribute='attributes.Recovered') | list | sum }}
          active: >
            {%- set features = state_attr('sensor.corona_virus_rest', 'features') %}
            {{ features | map(attribute='attributes.Active') | list | sum }}
      corona_virus_ny:
        unique_id: corona_virus_ny
        friendly_name: Corona Virus New York
        entity_id: sensor.corona_virus_rest
        availability_template: >
          {%- set features = state_attr('sensor.corona_virus_rest', 'features') %}
          {%- set features = features | map(attribute='attributes') | list %}
          {{ features | length > 0 }}
        value_template: >
          {%- set features = state_attr('sensor.corona_virus_rest', 'features') %}
          {%- set features = features | map(attribute='attributes') | list %}
          {%- set items = features | selectattr('Province_State','eq','New York') | list %}
          {%- if items | length > 0 %}
            {%- set item = items | first %}
            {%- set last_updated = item.Last_Update | int / 1000 %}
            {{ last_updated | timestamp_custom('%Y-%m-%dT%H:%M:%S.%f+00:00', False) }}
          {%- else %}
            {{ states('sensor.corona_virus_ny') }}
          {%- endif %}
        attribute_templates:
          confirmed: >
            {%- set features = state_attr('sensor.corona_virus_rest', 'features') %}
            {%- set features = features | map(attribute='attributes') | list %}
            {%- set items = features | selectattr('Province_State','eq','New York') | list %}
            {%- if items | length > 0 %}
              {%- set item = items | first %}
              {{ item.Confirmed }}
            {%- else %}
              {{ state_attr('sensor.corona_virus_ny', 'confirmed') }}
            {%- endif %}
          deaths: >
            {%- set features = state_attr('sensor.corona_virus_rest', 'features') %}
            {%- set features = features | map(attribute='attributes') | list %}
            {%- set items = features | selectattr('Province_State','eq','New York') | list %}
            {%- if items | length > 0 %}
              {%- set item = items | first %}
              {{ item.Deaths }}
            {%- else %}
              {{ state_attr('sensor.corona_virus_ny', 'deaths') }}
            {%- endif %}
          recovered: >
            {%- set features = state_attr('sensor.corona_virus_rest', 'features') %}
            {%- set features = features | map(attribute='attributes') | list %}
            {%- set items = features | selectattr('Province_State','eq','New York') | list %}
            {%- if items | length > 0 %}
              {%- set item = items | first %}
              {{ item.Recovered }}
            {%- else %}
              {{ state_attr('sensor.corona_virus_ny', 'recovered') }}
            {%- endif %}
          active: >
            {%- set features = state_attr('sensor.corona_virus_rest', 'features') %}
            {%- set features = features | map(attribute='attributes') | list %}
            {%- set items = features | selectattr('Province_State','eq','New York') | list %}
            {%- if items | length > 0 %}
              {%- set item = items | first %}
              {{ item.Active }}
            {%- else %}
              {{ state_attr('sensor.corona_virus_ny', 'active') }}
            {%- endif %}
      corona_virus_florida:
        unique_id: corona_virus_florida
        friendly_name: Corona Virus Florida
        entity_id: sensor.corona_virus_rest
        availability_template: >
          {%- set features = state_attr('sensor.corona_virus_rest', 'features') %}
          {%- set features = features | map(attribute='attributes') | list %}
          {{ features | length > 0 }}
        value_template: >
          {%- set features = state_attr('sensor.corona_virus_rest', 'features') %}
          {%- set features = features | map(attribute='attributes') | list %}
          {%- set items = features | selectattr('Province_State','eq','Florida') | list %}
          {%- if items | length > 0 %}
            {%- set item = items | first %}
            {%- set last_updated = item.Last_Update | int / 1000 %}
            {{ last_updated | timestamp_custom('%Y-%m-%dT%H:%M:%S.%f+00:00', False) }}
          {%- else %}
            {{ states('sensor.corona_virus_florida') }}
          {%- endif %}
        attribute_templates:
          confirmed: >
            {%- set features = state_attr('sensor.corona_virus_rest', 'features') %}
            {%- set features = features | map(attribute='attributes') | list %}
            {%- set items = features | selectattr('Province_State','eq','Florida') | list %}
            {%- if items | length > 0 %}
              {%- set item = items | first %}
              {{ item.Confirmed }}
            {%- else %}
              {{ state_attr('sensor.corona_virus_florida', 'confirmed') }}
            {%- endif %}
          deaths: >
            {%- set features = state_attr('sensor.corona_virus_rest', 'features') %}
            {%- set features = features | map(attribute='attributes') | list %}
            {%- set items = features | selectattr('Province_State','eq','Florida') | list %}
            {%- if items | length > 0 %}
              {%- set item = items | first %}
              {{ item.Deaths }}
            {%- else %}
              {{ state_attr('sensor.corona_virus_florida', 'deaths') }}
            {%- endif %}
          recovered: >
            {%- set features = state_attr('sensor.corona_virus_rest', 'features') %}
            {%- set features = features | map(attribute='attributes') | list %}
            {%- set items = features | selectattr('Province_State','eq','Florida') | list %}
            {%- if items | length > 0 %}
              {%- set item = items | first %}
              {{ item.Recovered }}
            {%- else %}
              {{ state_attr('sensor.corona_virus_florida', 'recovered') }}
            {%- endif %}
          active: >
            {%- set features = state_attr('sensor.corona_virus_rest', 'features') %}
            {%- set features = features | map(attribute='attributes') | list %}
            {%- set items = features | selectattr('Province_State','eq','Florida') | list %}
            {%- if items | length > 0 %}
              {%- set item = items | first %}
              {{ item.Active }}
            {%- else %}
              {{ state_attr('sensor.corona_virus_florida', 'active') }}
            {%- endif %}
      corona_virus_county:
        unique_id: corona_virus_county
        entity_id: sensor.corona_virus_county_rest
        friendly_name_template: >
          {%- set features = state_attr('sensor.corona_virus_county_rest', 'features') %}
          {%- set items = features | map(attribute='attributes') | list %}
          {%- if items | length > 0 %}
            {%- set item = items | first %}
            Corona Virus {{ item.Admin2 }}
          {%- else %}
            Corona Virus {{ state_attr('sensor.corona_virus_county_rest', 'county') }}
          {%- endif %}
        availability_template: >
          {%- set features = state_attr('sensor.corona_virus_county_rest', 'features') %}
          {%- set features = features | map(attribute='attributes') | list %}
          {{ features | length > 0 }}
        value_template: >
          {%- set features = state_attr('sensor.corona_virus_county_rest', 'features') %}
          {%- set items = features | map(attribute='attributes') | list %}
          {%- if items | length > 0 %}
            {%- set item = items | first %}
            {%- set last_updated = item.Last_Update | int / 1000 %}
            {{ last_updated | timestamp_custom('%Y-%m-%dT%H:%M:%S.%f+00:00', False) }}
          {%- else %}
            {{ states('sensor.corona_virus_county_rest') }}
          {%- endif %}
        attribute_templates:
          confirmed: >
            {%- set features = state_attr('sensor.corona_virus_county_rest', 'features') %}
            {%- set items = features | map(attribute='attributes') | list %}
            {%- if items | length > 0 %}
              {%- set item = items | first %}
              {{ item.Confirmed }}
            {%- else %}
              {{ state_attr('sensor.corona_virus_county_rest', 'confirmed') }}
            {%- endif %}
          deaths: >
            {%- set features = state_attr('sensor.corona_virus_county_rest', 'features') %}
            {%- set items = features | map(attribute='attributes') | list %}
            {%- if items | length > 0 %}
              {%- set item = items | first %}
              {{ item.Deaths }}
            {%- else %}
              {{ state_attr('sensor.corona_virus_county_rest', 'deaths') }}
            {%- endif %}
          recovered: >
            {%- set features = state_attr('sensor.corona_virus_county_rest', 'features') %}
            {%- set items = features | map(attribute='attributes') | list %}
            {%- if items | length > 0 %}
              {%- set item = items | first %}
              {{ item.Recovered if item.Recovered else 0 }}
            {%- else %}
              {{ state_attr('sensor.corona_virus_county_rest', 'recovered') }}
            {%- endif %}
          active: >
            {%- set features = state_attr('sensor.corona_virus_county_rest', 'features') %}
            {%- set items = features | map(attribute='attributes') | list %}
            {%- if items | length > 0 %}
              {%- set item = items | first %}
              {{ item.Active if item.Active else 0 }}
            {%- else %}
              {{ state_attr('sensor.corona_virus_county_rest', 'active') }}
            {%- endif %}
          county: >
            {%- set features = state_attr('sensor.corona_virus_county_rest', 'features') %}
            {%- set items = features | map(attribute='attributes') | list %}
            {%- if items | length > 0 %}
              {%- set item = items | first %}
              {{ item.Admin2 }}
            {%- else %}
              {{ state_attr('sensor.corona_virus_county_rest', 'county') }}
            {%- endif %}
            
  # People at home sensor

  - platform: template
    sensors:
      people_at_home:
        unique_id: people_at_home
        friendly_name: People at Home
        value_template: >
          {%- set people = expand('group.people') %}
          {{ people | selectattr('state', 'in', ['home', 'on'] ) | list | count }}
        icon_template: >
          {%- set icons = ['account-off', 'account', 'account-multiple'] %}
          {%- set people = expand('group.people') %}
          {%- set cnt = people | selectattr('state', 'in', ['home', 'on'] ) | list | count %}
          {%- if cnt >= 0 %}
            mdi:{{ icons[cnt] if cnt in range(icons | count) else 'account-group' }}
          {%- else %}
            mdi:account-alert
          {%- endif %}
        attribute_templates:
          people: > 
            {%- set people = expand('group.people') | selectattr('state', 'eq', 'home') | map(attribute='name') | list %}
            {%- set company = expand('group.people') | selectattr('state', 'eq', 'on') | map(attribute='name') | list %}
            {%- set people = people + company %}
            {{ people }}
          and: >
            {%- set people = expand('group.people') | selectattr('state', 'eq', 'home') | map(attribute='name') | list %}
            {%- set company = expand('group.people') | selectattr('state', 'eq', 'on') | map(attribute='name') | list %}
            {%- set people = people + company %}
            {%- if people | count > 0 %}
              {{- [people[:-1] | join(', '), 'and', people[-1]] | join(' ') if people | count > 1 else people[0] }}
            {%- else %}unknown
            {%- endif %}
          or: >
            {%- set people = expand('group.people') | selectattr('state', 'eq', 'home') | map(attribute='name') | list %}
            {%- set company = expand('group.people') | selectattr('state', 'eq', 'on') | map(attribute='name') | list %}
            {%- set people = people + company %}
            {%- if people | count > 0 %}
              {{- [people[:-1] | join(', '), 'or', people[-1]] | join(' ') if people | count > 1 else people[0] }}
            {%- else %}unknown
            {%- endif %}
          count: >
            {%- set people = expand('group.people') | selectattr('state', 'eq', 'home') | map(attribute='name') | list %}
            {%- set company = expand('group.people') | selectattr('state', 'eq', 'on') | map(attribute='name') | list %}
            {%- set people = people + company %}
            {{ people | count }}

  # Christmas Season Sensor

  - platform: template
    sensors:
      christmas_season:
        unique_id: christmas_season
        friendly_name: Christmas Season
        value_template: >
          {%- set month, week, day = 11, 4, 3 %}
          {%- set today = now().date() %}
          {%- set temp = today.replace(month=month, day=1) %}
          {%- set adjust = (day - temp.weekday()) % 7 %}
          {%- set temp = temp + timedelta(days=adjust) %}
          {%- set thanksgiving = temp + timedelta(weeks = week - 1) %}
          {%- set jan15th = temp.replace(month=1, day=15) %}
          {{ today <= jan15th or today > thanksgiving }}