- alias: Washer and Dryer - Notify
  id: announce_dryer_when_complete
  mode: parallel
  trigger:
  - platform: state
    entity_id: 
    - binary_sensor.dryer_status
    - binary_sensor.washer_status
    to: 'off'
    from: 'on'
  variables:
    valid: >
      {{ trigger | default(none) is not none and trigger.to_state is defined and trigger.from_state is defined }}
    timeout: >
      {%- if valid %}
        {{ as_timestamp(trigger.to_state.last_changed, 0) - as_timestamp(trigger.from_state.last_changed, 0) }}
      {% endif %}
    continue: >
      {{ timeout and timeout > 15 }}
    name: >
      {{ trigger.to_state.name.split(' ')[0] if valid else 'Unknown' }}
    announce: >
      {{ name.lower() if name != 'Unkonwn' else none }}
    switch: >
      switch.announce_{{ announce }}
  condition:
  - condition: template
    value_template: "{{ continue and announce is not none }}"
  action:
  - service: switch.turn_on
    target:
      entity_id: "{{ switch }}"
  - service: script.notify
    data:
      title: "{{ name }} is finished!"
      message: "{{ name }} is finished!"

- alias: Washer and Dryer - Booleans
  id: washer_and_dryer_booleans
  mode: parallel
  trigger:
  - platform: state
    entity_id: 
    - sensor.dryer_power
    - sensor.washer_power
  variables:
    config:
      sensor.washer_power: 
        input_boolean: input_boolean.washer
        threshold: 80
      sensor.dryer_power: 
        input_boolean: input_boolean.dryer
        threshold: 150
    valid: >
      {{ trigger | default(none) is not none and trigger.to_state is defined and trigger.from_state is defined }}
    current: >
      {{ config.get(trigger.entity_id) }}
    have_current: >
      {{ current is not none }}
    number: >
      {{ trigger.to_state.state if valid and is_number(trigger.to_state.state) else none }}
    have_number: >
      {{ number is not none }}
    disposition: >
      {{ number > current.threshold if have_current and have_number else none }}
    service_target: >
      {{ current.input_boolean if have_current else none }}
    service_call: >
      homeassistant.turn_o{{ 'n' if disposition else 'ff' }}
    continue: >
      {{ valid and disposition is not none }}
  condition:
  - condition: template
    value_template: "{{ continue }}"
  action:
  - service: "{{ service_call }}"
    target:
      entity_id: "{{ service_target }}"