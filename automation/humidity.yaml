- alias: Turn on fan when bathroom humidity is high.
  id: bathroom_turn_on_fan_when_humidity_is_high
  mode: restart
  trigger:
  - platform: state
    entity_id: binary_sensor.master_bathroom_humidity_status
  variables:
    check: >
      {{ trigger | default(none) is not none and trigger.to_state is defined and trigger.from_state is defined }}
    continue: >
      {%- set valid = ['on', 'off'] %}
      {{ check and trigger.to_state.state in valid and trigger.from_state.state in valid }}
    service: >
      switch.turn_{{ trigger.to_state.state if continue else none }}
    add_delay: >
      {{ trigger.to_state.state == 'off' if continue else False }}
  condition:
  - condition: template
    value_template: "{{ continue }}"
  action:
  
  - choose:
    - conditions: "{{ add_delay }}"
      sequence:
      - delay: "00:20:00"

  - service: "{{ service }}"
    target:
      entity_id: switch.master_bathroom_fan

  - delay:
      seconds: 1

- alias: Notify when basement humidity is high
  id: basement_notify_when_humidity_is_high
  mode: parallel
  trigger:
  - id: '2 hours'
    platform: state
    entity_id: binary_sensor.basement_humidity_high
    to: 'on'
    for:
      hours: 2
  - id: '10 hours'
    platform: state
    entity_id: binary_sensor.basement_humidity_high
    to: 'on'
    for:
      hours: 10
  action:
  - service: script.notify
    data:
      title: "Basement humidity has been high for {{ trigger.id }}."
      message: "Basement humidity has been high for {{ trigger.id }}."
