- alias: Timed Event - Daily Snapshot
  id: daily_snapshot
  trigger:
    - platform: time
      at: '04:00:00'
  action:
    - service: hassio.addon_start
      data:
        addon: 954f2f4e_remote_backup
    - service: persistent_notification.create
      data:
        title: Daily Snapshot
        message: "Successfully created daily snapshot."
        notification_id: Daily Snapshot
    
- alias: Timed Event - Garbage Day Message
  id: garbage_day_message
  trigger:
    - platform: time
      at: '10:00:00'
    - platform: time
      at: '15:30:00'
    - platform: time
      at: '19:00:00'
  condition:
    - condition: time
      weekday:
        - mon
  action:
    - service: notify.homeowners
      data:
        message: "Trash day tomorrow!"
        
- alias: Timed Event - Change Filters Message
  id: change_filters_message
  trigger:
    - platform: time
      at: '10:00:00'
    - platform: time
      at: '19:00:00'
  condition:
    - condition: template
      value_template: "{{ now().day == 1 and now().month in [ 1, 4, 7, 10 ] }}"
  action:
    - service: notify.homeowners
      data:
        message: "Change HVAC filter."
            
- alias: Timed Event - Mosby Heartworm and Flee Medication.
  id: mosby_heartworm
  trigger:
    - platform: time
      at: '10:00:00'
    - platform: time
      at: '19:00:00'
  condition:
    - condition: template
      value_template: "{{ now().day == 1 }}"
  action:
    - service: notify.homeowners
      data:
        message: "Give mosby heartworm and flee medication."

- alias: Timed Event - DST Warning
  id: dst_warning
  trigger:
    - platform: time
      at: '10:00:00'
    - platform: time
      at: '19:00:00'
  condition:
    - condition: template
      value_template: >
        {{ state_attr('sensor.dst', 'next').days_to_event in [7,1] }}
  action:
    - service: notify.homeowners
      data:
        message: >
          {%- set next = state_attr('sensor.dst', 'next') %}
          {%- set plural = 's' if next.days_to_event > 1 else '' %}
          "Daylight savings in {{ next.days_to_event }} day{{plural}}, you will {{ next.phrase }}!"

- alias: Timed Event - Indoor Christmas Lights
  id: indoor_christmas_lights
  trigger:
  - platform: time
    at: '16:00:00'
  - platform: time
    at: '23:00:00'
  variables:
    time: >
      {%- set dt = trigger.now | default(now()) %}
      {{ dt.time().replace(second=0, microsecond=0) | string }}
  condition:
  - condition: template
    value_template: "{{ is_state('binary_sensor.christmas_season', 'on') }}"
  action:
  - service: switch.turn_o{{ 'n' if time == '16:00:00' else 'ff' }}
    target:
      entity_id:
      - switch.living_room_window
      - switch.kitchen_outlet_above_microwave
      - switch.kitchen_outlet_above_fridge
  
- alias: Timed Event - Outdoor Lights On at Sunset, Off at Sunrise
  id: outdoor_lights_on_off
  trigger:
  - platform: sun
    event: sunset
  - platform: sun
    event: sunrise
  variables:
    event: >
      {{ trigger.event | default('invalid') }}
  condition:
  - condition: template
    value_template: "{{ event in ['sunset','sunrise'] }}"
  action:
  - service: homeassistant.turn_o{{ 'n' if event == 'sunset' else 'ff' }}
    target:
      entity_id:
      - light.main_door_left_bulb
      - light.main_door_right_bulb
      - light.passenger_door_bulb
      - light.garage_sconce_left_bulb
      - light.garage_sconce_right_bulb
      - switch.flood_light
      - switch.sliding_door_sconce
