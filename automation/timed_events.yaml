- alias: Daily Snapshot
  trigger:
    - platform: time
      at: '04:00:00'
  action:
    - service: hassio.addon_start
      data:
        addon: 954f2f4e_remote_backup
    - service: persistent_notification.create
      data:
        title: Daily Snapshot
        message: "Successfully created daily snapshot."
        notification_id: Daily Snapshot

- alias: Reboot Once A Week
  trigger:
    - platform: time
      at: '10:00:00'
  condition:
    - condition: time
      weekday:
        - wed
  action:
    - service: notify.ios_petro
      data:
        message: "Rebooting..."
        data:
          push:
            badge: 5
    - service: hassio.host_reboot
    
- alias: Garbage Day Message
  trigger:
    - platform: time
      at: '10:00:00'
    - platform: time
      at: '15:30:00'
    - platform: time
      at: '19:00:00'
  condition:
    - condition: time
      weekday:
        - mon
  action:
    - service: notify.homeowners
      data:
        message: "Trash day tomorrow!"
        
- alias: Change Filters Message
  trigger:
    - platform: time
      at: '10:00:00'
    - platform: time
      at: '19:00:00'
  condition:
    - condition: template
      value_template: "{{ now().day == 1 and now().month in [ 1, 4, 7, 10 ] }}"
  action:
    - service: notify.homeowners
      data:
        message: "Change HVAC filter."
            
- alias: Mosby Heartworm and Flee Medication.
  trigger:
    - platform: time
      at: '10:00:00'
    - platform: time
      at: '19:00:00'
  condition:
    - condition: template
      value_template: "{{ now().day == 1 }}"
  action:
    - service: notify.homeowners
      data:
        message: "Give mosby heartworm and flee medication."

- alias: DST Warning
  trigger:
    - platform: time
      at: '10:00:00'
    - platform: time
      at: '19:00:00'
  condition:
    - condition: template
      value_template: >
        {{ state_attr('sensor.dst', 'next').days_to_event in [7,1] }}
  action:
    - service: notify.homeowners
      data:
        message: >
          {%- set next = state_attr('sensor.dst', 'next') %}
          {%- set plural = 's' if next.days_to_event > 1 else '' %}
          "Daylight savings in {{ next.days_to_event }} day{{plural}}, you will {{ next.phrase }}!"