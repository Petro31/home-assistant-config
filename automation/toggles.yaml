- alias: Game Room Lights
  id: toggle_game_room_lights
  trigger:
  - platform: state
    entity_id: switch.game_room_switch
  variables:
    continue: >
      {{ trigger | default(none) is not none and trigger.to_state is defined and trigger.from_state is defined }}
    to_state: >
      {{ trigger.to_state.state | default('') if continue else '' }}
  condition:
  - condition: template
    value_template: "{{ continue and to_state in ['on','off'] }}"
  action:
  - service: switch.turn_{{ to_state }}
    target:
      entity_id:
      - switch.game_room_bookcase_outlet
      - switch.game_room_buffet_outlet


- alias: Basement Lights
  id: toggle_basement_lights
  trigger:
  - platform: state
    entity_id: switch.basement_stairs
  variables:
    continue: >
      {{ trigger | default(none) is not none and trigger.to_state is defined and trigger.from_state is defined }}
    to_state: >
      {{ trigger.to_state.state | default('') if continue else '' }}
  condition:
  - condition: template
    value_template: "{{ continue and to_state in ['on','off'] }}"
  action:
  - service: switch.turn_{{ to_state }}
    target:
      entity_id:
      - switch.basement_cans


- alias: Deck String Lights
  id: toggle_deck_string_lights
  trigger:
  - platform: state
    entity_id: &deck_string_entities
    - switch.deck_mood_lighting
    - switch.patio_string_light
  variables:
    entities: *deck_string_entities
    state_list:
    - 'on'
    - 'off'
    continue: >
      {{ trigger | default(none) is not none and trigger.to_state is defined and trigger.from_state is defined }}
    to_state: >
      {{ trigger.to_state.state | default(none) if continue else none }}
    targets: >
      {{ expand(entities) | rejectattr('entity_id', 'eq', trigger.entity_id) | rejectattr('state', 'eq', to_state) | map(attribute='entity_id') | list if continue else [] }}
  condition:
  - condition: template
    value_template: "{{ continue and to_state in state_list and targets | count > 0 }}"
  action:
  - service: switch.turn_{{ to_state }}
    target:
      entity_id: "{{ targets }}"

- alias: Uplight & Downlight Cabinet from Switch
  id: toggle_cabinet_string_lights
  mode: single
  trigger:
  - platform: state
    entity_id: switch.kitchen_cabinet
  variables:
    entities:
    - switch.kitchen_cabinet_2
    - switch.kitchen_uplight
    in_season: >
      {% set remove = ['switch.kitchen_uplight'] if is_state('binary_sensor.indoor_holiday', 'on') else [] %}
      {{ entities | reject('in', remove) | list }}
    state_list:
    - 'on'
    - 'off'
    continue: >
      {{ trigger | default(none) is not none and trigger.to_state is defined and trigger.from_state is defined and trigger.to_state.state in state_list }}
    targets: >
      {{ in_season | reject('is_state', trigger.to_state.state) | list if continue else [] }}
  condition:
  - condition: template
    value_template: "{{ targets | count > 0 }}"
  action:
  - service: switch.turn_{{ trigger.to_state.state }}
    target:
      entity_id: "{{ targets }}"
